{"version":3,"sources":["js/index.js"],"names":["dom","items","document","querySelectorAll","baby","querySelector","screen","buttons","Gotchi","names","action","food","bind","light","play","medical","shower","measure","talk","check","item","locked","weight","Math","random","age","hungry","setInterval","update","i","length","classList","remove","add","moveItem","f","setTimeout","textContent","unlock","lock","nope","innerHTML","repeat","gotchi","onclick","back","run","next"],"mappings":"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","file":"js.be965fbc.map","sourceRoot":"..\\src","sourcesContent":["const dom = {\n  items: document.querySelectorAll('.screen i'),\n  baby: document.querySelector('.baby'),\n  screen: document.querySelector('.screen'),\n  buttons: document.querySelectorAll('.buttons .button')\n};\n\nconst Gotchi = class {\n  constructor() {\n    // Refactor\n    this.names = ['food', 'light', 'play', 'medical', 'shower', 'measure', 'talk', 'check'];\n    this.action = [this.food.bind(this), this.light.bind(this), this.play.bind(this), this.medical.bind(this), this.shower.bind(this), this.measure.bind(this), this.talk.bind(this), this.check.bind(this)];\n\n    this.item = -1;\n    this.locked = false;\n\n    // attrs\n    this.weight = 30 + ~~(Math.random() * 25);\n    this.age = 0;\n    this.hungry = 3;\n\n    setInterval(this.update, 10000);\n  }\n\n  update() {\n    let r = 1 + ~~(Math.random() * 6);\n\n    if (r == 1)\n      this.hungry++;\n\n    this.age += 0.01;\n  }\n\n  // Items\n  moveItem() {\n    for (let i = 0; i < dom.items.length; i++)\n      dom.items[i].classList.remove('active');\n    dom.items[this.item].classList.add('active');\n  }\n\n  back() {\n    this.item = (this.item > 0) ? this.item - 1 : 0;\n    this.moveItem();\n  }\n\n  next() {\n    this.item = (this.item < 7) ? this.item + 1 : this.item;\n    this.moveItem();\n  }\n\n  run() {\n    if (this.locked)\n      return;\n\n    this.action[this.item]();\n  }\n\n  // Lock/Unlock\n  lock(f) {\n    this.locked = true;\n    setTimeout(() => {\n      f();\n      dom.baby.textContent = '';\n      this.unlock();\n    }, 4000);\n  }\n\n  unlock() {\n    this.locked = false;\n  }\n\n  // Actions\n  food() {\n    if (this.hungry > 0) {        \n      this.hungry--;\n      dom.baby.classList.add('eat');        \n      this.lock(() => dom.baby.classList.remove('eat'));\n    }\n    else\n      this.nope();\n  }\n\n  light() {\n    dom.baby.classList.add('sunglasses');\n    this.lock(() => dom.baby.classList.remove('sunglasses'));    \n  }\n\n  play() {\n    dom.baby.classList.add('play');\n    this.lock(() => dom.baby.classList.remove('play'));    \n  }\n\n  medical() {\n    this.nope();\n  }\n\n  shower() {\n    dom.baby.classList.add('shower');\n    this.lock(() => dom.baby.classList.remove('shower'));    \n  }\n\n  measure() {\n    dom.baby.classList.add('off');\n    dom.baby.textContent = `Weight: ${this.weight}KB`;\n    this.lock(() => dom.baby.classList.remove('off'));    \n  }\n\n  talk() {\n    dom.baby.classList.add('talk');\n    this.lock(() => dom.baby.classList.remove('talk'));\n  }\n\n  check() {\n    dom.baby.classList.add('off');\n    dom.baby.innerHTML = `Hungry: ${'*'.repeat(this.hungry)}<br>Age: ${this.age}`;\n    this.lock(() => dom.baby.classList.remove('off'));    \n  }\n\n  nope() {\n    dom.baby.classList.add('nope');\n    this.lock(() => dom.baby.classList.remove('nope'));    \n  }\n};\n\nlet gotchi = new Gotchi();\n\ndom.buttons[0].onclick = () => gotchi.back();\ndom.buttons[1].onclick = () => gotchi.run();\ndom.buttons[2].onclick = () => gotchi.next();\n"]}